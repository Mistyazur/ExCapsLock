#include "keyboardhook.h"
#include "cmdpalette.h"
#include "appcapture.h"
#include <QDebug>

CmdPalette *g_cmdPalette = nullptr;
AppCapture *g_appCapture = nullptr;

void KeyClick(WORD key)
{
    INPUT input[2] = {0};
    input[0].type = input[1].type = INPUT_KEYBOARD;
    input[0].ki.wVk = input[1].ki.wVk = key;
    input[0].ki.dwFlags = 0;
    input[1].ki.dwFlags = KEYEVENTF_KEYUP;
    ::SendInput(_countof(input), input, sizeof(INPUT));
}

LRESULT CALLBACK KbHookProc(int nCode, WPARAM wParam, LPARAM lParam)
{
    static bool capsDown = false;
    static bool bComposite  = false;
    PKBDLLHOOKSTRUCT pKey = (PKBDLLHOOKSTRUCT)lParam;

//    qDebug()<<"KEY:"<<wParam<<pKey->vkCode<<(pKey->flags & LLKHF_INJECTED);
//    return CallNextHookEx(NULL, nCode, wParam, lParam);

    // Key event injected was simulated.
    if (pKey->flags & LLKHF_INJECTED) {
        // Simulated keys are generated by capslock plus other keys,
        // it can't be hooked because simulated keys are discarded when capslock down.
        if (capsDown)
            return CallNextHookEx(NULL, nCode, wParam, lParam);
    }

    if (wParam == WM_KEYDOWN) {
        if (capsDown) {
            // Key pressed with Caps Lock
            bComposite  = true;

            if (pKey->vkCode == VK_SPACE)
                // Capslock + space: show command
                g_cmdPalette->activate();
            else if (pKey->vkCode == 'Q')
                // Capslock +
                g_appCapture->capture();
            else if (pKey->vkCode == 'W')
                // Capslock + W: Up
                KeyClick(VK_UP);
            else if (pKey->vkCode == 'S')
                // Capslock + S: Down
                KeyClick(VK_DOWN);
            else if (pKey->vkCode == 'A')
                // Capslock + A: Left
                KeyClick(VK_LEFT);
            else if (pKey->vkCode == 'D')
                // Capslock + D: Right
                KeyClick(VK_RIGHT);
        } else {
            if (pKey->vkCode == VK_CAPITAL) {
                // Caps Lock down
                capsDown = true;
                bComposite  = false;
            }
            else if (pKey->vkCode == VK_ESCAPE) {
                // Esc: hide command
                if (g_cmdPalette->isVisible())
                    return true;
            }
        }
    } else if (wParam == WM_KEYUP) {
        if (capsDown) {
            if (pKey->vkCode == VK_CAPITAL) {
                // Caps Lock up
                capsDown = false;

                // If no key pressed after capslock then simulate ESC
                if (!bComposite)
                    KeyClick(VK_ESCAPE);
            }
        } else {
            if (pKey->vkCode == VK_ESCAPE) {
                // Esc: hide command
                if (g_cmdPalette->isVisible()) {
                    g_cmdPalette->reset();
                    return true;
                }
            }
        }
    }

    // Discard this message if it's my business
    if (pKey->vkCode == VK_CAPITAL || capsDown)
        return true;

    return CallNextHookEx(NULL, nCode, wParam, lParam);
}

KeyboardHook::KeyboardHook(QObject *parent) : QObject(parent)
{
    g_cmdPalette = new CmdPalette();
    g_appCapture = new AppCapture();
    HHOOK keyboardHook = ::SetWindowsHookEx(WH_KEYBOARD_LL,
                                            KbHookProc,
                                            ::GetModuleHandle(NULL),
                                            0);
}

KeyboardHook::~KeyboardHook()
{
    delete g_cmdPalette;
}
